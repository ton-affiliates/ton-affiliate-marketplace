#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_Campaign.headers.fc";
#include "tact_Campaign.stdlib.fc";
#include "tact_Campaign.constants.fc";
#include "tact_Campaign.storage.fc";

;;
;; Contract Campaign functions
;;

slice $global_calculateUSDTWalletAddress(slice $ownerAddress, slice $jettonMasterAddress, cell $jettonWalletCode) impure inline_ref {
    var ($initData'status, $initData'balance, $initData'ownerAddress, $initData'jettonMasterAddress) = $JettonWalletData$_constructor_status_balance_ownerAddress_jettonMasterAddress(0, 0, $ownerAddress, $jettonMasterAddress);
    return $global_contractAddress($StateInit$_constructor_code_data($jettonWalletCode, $JettonWalletData$_store_cell(($initData'status, $initData'balance, $initData'ownerAddress, $initData'jettonMasterAddress))));
}

(slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $Campaign$_contract_init(slice $owner, int $campaignId, slice $advertiser, slice $payout, slice $bot, slice $usdtMasterAddress, cell $usdtWalletBytecode, int $advertiserFeePercentage, int $affiliateFeePercentage) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = (null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null());
    throw_unless(50865, ( __tact_slice_eq_bits($owner, __tact_context_get_sender()) ));
    $self'owner = $owner;
    $self'payout = $payout;
    $self'stopped = false;
    $self'campaignId = $campaignId;
    $self'advertiser = $advertiser;
    $self'bot = $bot;
    $self'advertiserFeePercentage = $advertiserFeePercentage;
    $self'affiliateFeePercentage = $affiliateFeePercentage;
    $self'currAffiliateId = 0;
    $self'affiliates = null();
    ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl) = $CampaignDetails$_constructor_regularUsersCostPerAction_premiumUsersCostPerAction_isPublicCampaign_campaignValidForNumDays_paymentMethod_requiresAdvertiserApprovalForWithdrawl(null(), null(), true, null(), 0, false);
    $self'state = 0;
    $self'lastUserActionTimestamp = 0;
    $self'campaignStartTimestamp = 0;
    $self'numAdvertiserWithdrawls = 0;
    $self'numAdvertiserSignOffs = 0;
    $self'numAdvertiserReplenishCampaign = 0;
    $self'numAdvertiserReplenishGasFees = 0;
    $self'numUserActions = 0;
    $self'totalAffiliateEarnings = 0;
    $self'maxCpaValue = 0;
    $self'topAffiliates = null();
    $self'contractUSDTBalance = 0;
    $self'contractUsdtWallet = $global_calculateUSDTWalletAddress($global_myAddress(), $usdtMasterAddress, $usdtWalletBytecode);
    return ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_calcCampaignBalance((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    if (($self'campaignDetails'paymentMethod == 0)) {
        int $campaignBalance = (($global_myBalance() - 500000000) - $self'totalAffiliateEarnings);
        var $fresh$ret_0 = $global_max($campaignBalance, 0);
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_0);
    } else {
        var $fresh$ret_1 = ($self'contractUSDTBalance - $self'totalAffiliateEarnings);
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_1);
    }
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_isCampaignExpired((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    if (null?($self'campaignDetails'campaignValidForNumDays)) {
        var $fresh$ret_2 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_2);
    } else {
        var $fresh$ret_3 = (($global_now() - $self'campaignStartTimestamp) > (__tact_not_null($self'campaignDetails'campaignValidForNumDays) * 86400));
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_3);
    }
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_campaignHasSufficientFundsToPayMaxCpa((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_4 = (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_calcCampaignBalance() > $self'maxCpaValue);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_4);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_transferJettonUSDT((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, slice $to, int $amount) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(1919, ($self'contractUSDTBalance >= $amount));
    int $adjustedAmount = ($amount / 1000);
    cell $forwardPayload = $Builder$_fun_endCell($Builder$_fun_storeSlice(store_uint($global_beginCell(), 0, 32), __tact_str_to_slice(__gen_slice_string_4283f2e204e0607846b270f967faef0d2593a6781c7c2c0cf581388cd4ee9f9d())));
    int $forwardTonAmount = 10000000;
    int $randomQueryId = $global_random(0, 18446744073709551614);
    cell $jettonTransferPayload = $Builder$_fun_endCell($Builder$_fun_storeRef(__tact_store_bool($Builder$_fun_storeCoins(__tact_store_bool(__tact_store_address(__tact_store_address($Builder$_fun_storeCoins(store_uint(store_uint($global_beginCell(), 260734629, 32), $randomQueryId, 64), $adjustedAmount), $to), $global_myAddress()), false), $forwardTonAmount), true), $forwardPayload));
    $global_send($SendParameters$_constructor_to_value_body_mode($self'contractUsdtWallet, 30000000, $jettonTransferPayload, 3));
    $self'contractUSDTBalance = $self'contractUSDTBalance - $amount;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_updateMaxCpaValue((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $val) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    $self'maxCpaValue = $global_max($self'maxCpaValue, $val);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), (int, int)) $Campaign$_fun_updateUserStat((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, tuple $userActionStatsOptional, int $currTime) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var ($userActionStatsOptional) = $userActionStatsOptional;
    var ($result'numActions, $result'lastUserActionTimestamp) = $UserActionStats$_constructor_numActions_lastUserActionTimestamp(0, 0);
    if ((~ null?($userActionStatsOptional))) {
        ($result'numActions, $result'lastUserActionTimestamp) = $UserActionStats$_not_null($userActionStatsOptional);
    }
    $result'numActions = $result'numActions + 1;
    $result'lastUserActionTimestamp = $currTime;
    var $fresh$ret_5 = ($result'numActions, $result'lastUserActionTimestamp);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_5);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_campaignHasSufficientTonToPayGasFees((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_13 = ($global_myBalance() >= 500000000);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_13);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_isCampaignActive((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    if (($self'state != 1)) {
        var $fresh$ret_7 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_7);
    }
    if ($self'stopped) {
        var $fresh$ret_8 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_8);
    }
    if (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignExpired()) {
        var $fresh$ret_9 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_9);
    }
    if ((~ ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_campaignHasSufficientFundsToPayMaxCpa())) {
        var $fresh$ret_10 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_10);
    }
    if ((~ ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_campaignHasSufficientTonToPayGasFees())) {
        var $fresh$ret_11 = false;
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_11);
    }
    var $fresh$ret_12 = true;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_12);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_updateTopAffiliates((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $affiliateId, int $earnings) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    if ((~ null?(__tact_dict_get_int_int($self'topAffiliates, 257, $affiliateId, 257)))) {
        $self'topAffiliates~__tact_dict_set_int_int(257, $affiliateId, $earnings, 257);
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
    }
    int $minEarnings = null();
    int $minId = 0;
    int $numAffiliates = 0;
    var ($id, $earning, $fresh$flag_6) = __tact_dict_min_int_int($self'topAffiliates, 257, 257);
    while ($fresh$flag_6) {
        $numAffiliates = $numAffiliates + 1;
        if (( (null?($minEarnings)) ? (true) : (($earning < __tact_not_null($minEarnings))) )) {
            $minEarnings = $earning;
            $minId = $id;
        }
        ($id, $earning, $fresh$flag_6) = __tact_dict_next_int_int($self'topAffiliates, 257, $id, 257);
    }
    if (($numAffiliates < 3)) {
        $self'topAffiliates~__tact_dict_set_int_int(257, $affiliateId, $earnings, 257);
        return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
    }
    if (( ((~ null?($minEarnings))) ? (($earnings > __tact_not_null($minEarnings))) : (false) )) {
        $self'topAffiliates~__tact_dict_delete_int(257, $minId);
        $self'topAffiliates~__tact_dict_set_int_int(257, $affiliateId, $earnings, 257);
    }
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_applyUserAction((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $userActionOpCode, int $affiliateId, int $isPremiumUser) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(24142, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignActive());
    tuple $affiliateDataOptional = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $affiliateId));
    throw_unless(53456, (~ null?($affiliateDataOptional)));
    var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($affiliateDataOptional);
    throw_unless(43147, ($affiliateData'state == 1));
    int $cpaOptional = null();
    if ($isPremiumUser) {
        $cpaOptional = __tact_dict_get_int_int($self'campaignDetails'premiumUsersCostPerAction, 257, $userActionOpCode, 257);
    } else {
        $cpaOptional = __tact_dict_get_int_int($self'campaignDetails'regularUsersCostPerAction, 257, $userActionOpCode, 257);
    }
    throw_unless(14486, (~ null?($cpaOptional)));
    int $costPerAction = __tact_not_null($cpaOptional);
    int $currTime = $global_now();
    if ($isPremiumUser) {
        tuple $userActionStatsOptional = $UserActionStats$_load_opt(__tact_dict_get_int_cell($affiliateData'premiumUserActionsStats, 257, $userActionOpCode));
        var ($userActionStats'numActions, $userActionStats'lastUserActionTimestamp) = ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateUserStat($userActionStatsOptional, $currTime);
        $affiliateData'premiumUserActionsStats~__tact_dict_set_int_cell(257, $userActionOpCode, $UserActionStats$_store_cell(($userActionStats'numActions, $userActionStats'lastUserActionTimestamp)));
    } else {
        tuple $userActionStatsOptional = $UserActionStats$_load_opt(__tact_dict_get_int_cell($affiliateData'userActionsStats, 257, $userActionOpCode));
        var ($userActionStats'numActions, $userActionStats'lastUserActionTimestamp) = ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateUserStat($userActionStatsOptional, $currTime);
        $affiliateData'userActionsStats~__tact_dict_set_int_cell(257, $userActionOpCode, $UserActionStats$_store_cell(($userActionStats'numActions, $userActionStats'lastUserActionTimestamp)));
    }
    if ($self'campaignDetails'requiresAdvertiserApprovalForWithdrawl) {
        $affiliateData'pendingApprovalEarnings = $affiliateData'pendingApprovalEarnings + $costPerAction;
    } else {
        $affiliateData'withdrawEarnings = $affiliateData'withdrawEarnings + $costPerAction;
    }
    $affiliateData'totalEarnings = $affiliateData'totalEarnings + $costPerAction;
    $self'affiliates~__tact_dict_set_int_cell(257, $affiliateId, $AffiliateData$_store_cell(($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings)));
    $self'lastUserActionTimestamp = $currTime;
    $self'numUserActions = $self'numUserActions + 1;
    $self'totalAffiliateEarnings = $self'totalAffiliateEarnings + $costPerAction;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateTopAffiliates($affiliateId, $affiliateData'totalEarnings);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_bouncedPayment((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $affiliateId, int $amount) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    tuple $affiliateDataOptional = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $affiliateId));
    throw_unless(48069, (~ null?($affiliateDataOptional)));
    var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($affiliateDataOptional);
    $affiliateData'withdrawEarnings = $affiliateData'withdrawEarnings + $amount;
    $self'affiliates~__tact_dict_set_int_cell(257, $affiliateId, $AffiliateData$_store_cell(($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings)));
    $self'totalAffiliateEarnings = $self'totalAffiliateEarnings + $amount;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), (int, slice, slice, slice, (cell, cell, int, int, int, int), int, int, int, int, int, int, int, int, int, int, int, int, int, slice, int, slice, int, int, int, int, int, int, int, cell)) $Campaign$_fun_campaignData((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_14 = $CampaignData$_constructor_campaignId_advertiser_owner_payout_campaignDetails_numAffiliates_totalAffiliateEarnings_campaignStartTimestamp_lastUserActionTimestamp_numAdvertiserWithdrawls_numUserActions_numAdvertiserSignOffs_numAdvertiserReplenishCampaign_numAdvertiserReplenishGasFees_state_campaignBalance_maxCpaValue_contractTonBalance_contractAddress_contractUSDTBalance_contractUsdtWallet_advertiserFeePercentage_affiliateFeePercentage_campaignHasSufficientFundsToPayMaxCpa_isCampaignExpired_isCampaignPausedByAdmin_campaignHasSufficientTonToPayGasFees_isCampaignActive_topAffiliates($self'campaignId, $self'advertiser, $self'owner, $self'payout, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'currAffiliateId, $self'totalAffiliateEarnings, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numUserActions, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'state, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_calcCampaignBalance(), $self'maxCpaValue, $global_myBalance(), $global_myAddress(), $self'contractUSDTBalance, $self'contractUsdtWallet, $self'advertiserFeePercentage, $self'affiliateFeePercentage, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_campaignHasSufficientFundsToPayMaxCpa(), ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignExpired(), $self'stopped, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_campaignHasSufficientTonToPayGasFees(), ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignActive(), $self'topAffiliates);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_14);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), tuple) $Campaign$_fun_affiliateData((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $affiliateId) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_15 = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $affiliateId));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_15);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), cell) $Campaign$_fun_affiliatesData((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_16 = $self'affiliates;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_16);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), cell) $Campaign$_fun_affiliatesDataInRange((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, int $fromIdx, int $toIdx) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(44215, ($toIdx > $fromIdx));
    cell $result = null();
    int $i = 0;
    repeat (($toIdx - $fromIdx)) {
        if ((~ null?($AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, ($fromIdx + $i)))))) {
            $result~__tact_dict_set_int_cell(257, ($fromIdx + $i), $AffiliateData$_store_opt($AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, ($fromIdx + $i)))));
        }
        $i = ($i + 1);
    }
    var $fresh$ret_17 = $result;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_17);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_balance((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_18 = $global_myBalance();
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_18);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_requireNotStopped((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(40368, (~ $self'stopped));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_requireStopped((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(53296, $self'stopped);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_fun_stopped((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_19 = $self'stopped;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_19);
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_fun_requireOwner((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), slice) $Campaign$_fun_owner((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline_ref {
    var (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)) = $self;
    var $fresh$ret_20 = $self'owner;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), $fresh$ret_20);
}

;;
;; Receivers of a Contract Campaign
;;

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_ParentToChildDeployCampaign((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, slice) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'campaignId, $msg'advertiser) = $msg;
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentCampaignDeployedSuccessfully$_store_cell($ChildToParentCampaignDeployedSuccessfully$_constructor_campaignId_advertiser($msg'campaignId, $msg'advertiser)), 10000000, 1));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_TokenExcesses((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'query_id) = $msg;
    throw_unless(59035, ( __tact_slice_eq_bits($self'contractUsdtWallet, __tact_context_get_sender()) ));
    throw_unless(2272, ($self'campaignDetails'paymentMethod == 1));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_JettonTransferNotification((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'queryId, $msg'amount, $msg'sender, $msg'forwardPayload) = $msg;
    throw_unless(59035, ( __tact_slice_eq_bits($self'contractUsdtWallet, __tact_context_get_sender()) ));
    throw_unless(40755, ( __tact_slice_eq_bits($self'advertiser, $msg'sender) ));
    throw_unless(26205, ($self'campaignDetails'paymentMethod == 1));
    $self'numAdvertiserReplenishCampaign = $self'numAdvertiserReplenishCampaign + 1;
    int $depositAmount = ($msg'amount * 1000);
    int $fee = ((($depositAmount * $self'advertiserFeePercentage) + 9999) / 10000);
    int $netAmount = ($depositAmount - $fee);
    if (($fee > 0)) {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($self'payout, $fee);
    }
    $self'contractUSDTBalance = $self'contractUSDTBalance + $netAmount;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AffiliateWithdrawEarnings((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireNotStopped();
    throw_unless(45028, ($Context$_get_value(__tact_context_get()) >= 20000000));
    tuple $affiliateDataOptional = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $msg'affiliateId));
    throw_unless(53456, (~ null?($affiliateDataOptional)));
    var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($affiliateDataOptional);
    throw_unless(26953, ( __tact_slice_eq_bits($affiliateData'affiliate, __tact_context_get_sender()) ));
    int $withdrawalAmount = $affiliateData'withdrawEarnings;
    throw_unless(10630, ($withdrawalAmount > 0));
    $affiliateData'withdrawEarnings = 0;
    $self'affiliates~__tact_dict_set_int_cell(257, $msg'affiliateId, $AffiliateData$_store_cell(($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings)));
    $self'totalAffiliateEarnings = $self'totalAffiliateEarnings - $withdrawalAmount;
    int $fee = ((($withdrawalAmount * $self'affiliateFeePercentage) + 9999) / 10000);
    int $netAmount = ($withdrawalAmount - $fee);
    if (($self'campaignDetails'paymentMethod == 0)) {
        $global_send($SendParameters$_constructor_to_value_bounce_mode($self'payout, $fee, true, 3));
        $global_send($SendParameters$_constructor_to_value_bounce_body_mode($affiliateData'affiliate, $netAmount, true, $PayAffiliate$_store_cell($PayAffiliate$_constructor_affiliateId_amount($msg'affiliateId, $netAmount)), 3));
    } else {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($self'payout, $fee);
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($affiliateData'affiliate, $netAmount);
    }
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserSignOffWithdraw((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (cell) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'setAffiliatesWithdrawEarnings) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireNotStopped();
    throw_unless(24142, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignActive());
    throw_unless(28586, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl);
    var ($affiliateId, $affiliateData, $fresh$flag_28) = __tact_dict_min_int_cell($self'affiliates, 257);
    while ($fresh$flag_28) {
        var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($AffiliateData$_load_opt($affiliateData));
        int $amountToWithdrawOptional = __tact_dict_get_int_int($msg'setAffiliatesWithdrawEarnings, 257, $affiliateId, 257);
        if ((~ null?($amountToWithdrawOptional))) {
            int $amountToWithdraw = __tact_not_null($amountToWithdrawOptional);
            throw_unless(9125, ($amountToWithdraw <= $affiliateData'pendingApprovalEarnings));
            int $diff = ($affiliateData'pendingApprovalEarnings - $amountToWithdraw);
            $affiliateData'pendingApprovalEarnings = $affiliateData'pendingApprovalEarnings - $diff;
            $affiliateData'totalEarnings = $affiliateData'totalEarnings - $diff;
            $self'totalAffiliateEarnings = $self'totalAffiliateEarnings - $diff;
        }
        $affiliateData'withdrawEarnings = $affiliateData'withdrawEarnings + $affiliateData'pendingApprovalEarnings;
        $affiliateData'pendingApprovalEarnings = 0;
        $self'affiliates~__tact_dict_set_int_cell(257, $affiliateId, $AffiliateData$_store_cell(($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings)));
        ($affiliateId, $affiliateData, $fresh$flag_28) = __tact_dict_next_int_cell($self'affiliates, 257, $affiliateId);
    }
    $self'numAdvertiserSignOffs = $self'numAdvertiserSignOffs + 1;
    $global_send($SendParameters$_constructor_to_value_mode($self'advertiser, 0, 64));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_ParentToChildSeizeCampaign((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, tuple $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var $msg = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    if (($self'contractUSDTBalance > 0)) {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($self'payout, $self'contractUSDTBalance);
    }
    $global_send($SendParameters$_constructor_to_value_mode($self'payout, 0, 128));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserSetCampaignDetails((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, ((cell, cell, int, int, int, int)) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var (($msg'campaignDetails'regularUsersCostPerAction, $msg'campaignDetails'premiumUsersCostPerAction, $msg'campaignDetails'isPublicCampaign, $msg'campaignDetails'campaignValidForNumDays, $msg'campaignDetails'paymentMethod, $msg'campaignDetails'requiresAdvertiserApprovalForWithdrawl)) = $msg;
    throw_unless(57567, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    throw_unless(57313, ($self'state == 0));
    throw_unless(5136, ( (($msg'campaignDetails'paymentMethod == 0)) ? (true) : (($msg'campaignDetails'paymentMethod == 1)) ));
    throw_unless(63944, ( (null?($msg'campaignDetails'campaignValidForNumDays)) ? (true) : ((__tact_not_null($msg'campaignDetails'campaignValidForNumDays) > 0)) ));
    int $maxCpaValue = 0;
    var ($key, $val, $fresh$flag_29) = __tact_dict_min_int_int($msg'campaignDetails'regularUsersCostPerAction, 257, 257);
    while ($fresh$flag_29) {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateMaxCpaValue($val);
        ($key, $val, $fresh$flag_29) = __tact_dict_next_int_int($msg'campaignDetails'regularUsersCostPerAction, 257, $key, 257);
    }
    var ($key, $val, $fresh$flag_30) = __tact_dict_min_int_int($msg'campaignDetails'premiumUsersCostPerAction, 257, 257);
    while ($fresh$flag_30) {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateMaxCpaValue($val);
        ($key, $val, $fresh$flag_30) = __tact_dict_next_int_int($msg'campaignDetails'premiumUsersCostPerAction, 257, $key, 257);
    }
    ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl) = ($msg'campaignDetails'regularUsersCostPerAction, $msg'campaignDetails'premiumUsersCostPerAction, $msg'campaignDetails'isPublicCampaign, $msg'campaignDetails'campaignValidForNumDays, $msg'campaignDetails'paymentMethod, $msg'campaignDetails'requiresAdvertiserApprovalForWithdrawl);
    $self'campaignStartTimestamp = $global_now();
    $self'state = 1;
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentAdvertiserSignedCampaignDetails$_store_cell($ChildToParentAdvertiserSignedCampaignDetails$_constructor_campaignId_advertiser($self'campaignId, $self'advertiser)), 0, 64));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserReplenish((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, tuple $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var $msg = $msg;
    throw_unless(12969, ($self'state == 1));
    throw_unless(53205, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    $self'numAdvertiserReplenishCampaign = $self'numAdvertiserReplenishCampaign + 1;
    int $depositAmount = $Context$_get_value(__tact_context_get());
    int $fee = ((($depositAmount * $self'advertiserFeePercentage) + 9999) / 10000);
    int $netAmount = ($depositAmount - $fee);
    if (($fee > 0)) {
        $global_send($SendParameters$_constructor_to_value_bounce_mode($self'payout, $fee, true, 3));
    }
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserReplenishGasFeesForUSDTCampaign((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, tuple $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var $msg = $msg;
    throw_unless(53205, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    throw_unless(12969, ($self'state == 1));
    throw_unless(60504, ($self'campaignDetails'paymentMethod == 1));
    $self'numAdvertiserReplenishGasFees = $self'numAdvertiserReplenishGasFees + 1;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AffiliateCreateNewAffiliate((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, tuple $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var $msg = $msg;
    throw_unless(24142, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignActive());
    throw_unless(8805, ($Context$_get_value(__tact_context_get()) >= 40000000));
    int $numAffiliates = $self'currAffiliateId;
    throw_unless(46629, ($numAffiliates <= 10000));
    int $affiliateId = $self'currAffiliateId;
    $self'currAffiliateId = $self'currAffiliateId + 1;
    int $affiliateInitialState = ($self'campaignDetails'isPublicCampaign ? 1 : 0);
    $self'affiliates~__tact_dict_set_int_cell(257, $affiliateId, $AffiliateData$_store_cell($AffiliateData$_constructor_affiliate_state_userActionsStats_premiumUserActionsStats_pendingApprovalEarnings_totalEarnings_withdrawEarnings(__tact_context_get_sender(), $affiliateInitialState, null(), null(), 0, 0, 0)));
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentAffiliateCreated$_store_cell($ChildToParentAffiliateCreated$_constructor_campaignId_advertiser_affiliateId_affiliate_state($self'campaignId, $self'advertiser, $affiliateId, __tact_context_get_sender(), $affiliateInitialState)), 0, 64));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserApproveAffiliate((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId) = $msg;
    throw_unless(19587, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    throw_unless(43069, (~ $self'campaignDetails'isPublicCampaign));
    tuple $affiliateDataOptional = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $msg'affiliateId));
    throw_unless(53456, (~ null?($affiliateDataOptional)));
    var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($affiliateDataOptional);
    throw_unless(32702, ($affiliateData'state == 0));
    $affiliateData'state = 1;
    $self'affiliates~__tact_dict_set_int_cell(257, $msg'affiliateId, $AffiliateData$_store_cell(($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings)));
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentAdvertiserApprovedAffiliate$_store_cell($ChildToParentAdvertiserApprovedAffiliate$_constructor_campaignId_advertiser_affiliateId_affiliate($self'campaignId, $self'advertiser, $msg'affiliateId, $affiliateData'affiliate)), 10000000, 1));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserRemoveAffiliate((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId) = $msg;
    throw_unless(19587, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    tuple $affiliateDataOptional = $AffiliateData$_load_opt(__tact_dict_get_int_cell($self'affiliates, 257, $msg'affiliateId));
    throw_unless(53456, (~ null?($affiliateDataOptional)));
    var ($affiliateData'affiliate, $affiliateData'state, $affiliateData'userActionsStats, $affiliateData'premiumUserActionsStats, $affiliateData'pendingApprovalEarnings, $affiliateData'totalEarnings, $affiliateData'withdrawEarnings) = $AffiliateData$_not_null($affiliateDataOptional);
    $self'affiliates~__tact_dict_delete_int(257, $msg'affiliateId);
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentAdvertiserRemovedAffiliate$_store_cell($ChildToParentAdvertiserRemovedAffiliate$_constructor_campaignId_advertiser_affiliateId_affiliate($self'campaignId, $self'advertiser, $msg'affiliateId, $affiliateData'affiliate)), 10000000, 1));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserWithdrawFunds((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'amount) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireNotStopped();
    throw_unless(12969, ($self'state == 1));
    throw_unless(36363, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    int $campaignBalance = ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_calcCampaignBalance();
    throw_unless(22985, ($campaignBalance >= $msg'amount));
    $self'numAdvertiserWithdrawls = $self'numAdvertiserWithdrawls + 1;
    $global_send($SendParameters$_constructor_to_body_value_mode($self'owner, $ChildToParentAdvertiserWithdrawFunds$_store_cell($ChildToParentAdvertiserWithdrawFunds$_constructor_campaignId_advertiser_amount($self'campaignId, $self'advertiser, $msg'amount)), 10000000, 3));
    if (($self'campaignDetails'paymentMethod == 0)) {
        $global_send($SendParameters$_constructor_to_value_mode($self'advertiser, $msg'amount, 1));
    } else {
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($self'advertiser, $msg'amount);
    }
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_BotUserAction((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int, int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId, $msg'userActionOpCode, $msg'isPremiumUser) = $msg;
    throw_unless(42372, ( __tact_slice_eq_bits($self'bot, __tact_context_get_sender()) ));
    throw_unless(7354, ($msg'userActionOpCode <= 20000));
    throw_unless(20411, ($global_myBalance() >= ($Context$_get_value(__tact_context_get()) + 10000000)));
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_applyUserAction($msg'userActionOpCode, $msg'affiliateId, $msg'isPremiumUser);
    $global_send($SendParameters$_constructor_to_value_mode($self'bot, $Context$_get_value(__tact_context_get()), 1));
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserAddNewUserOpCode((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int, int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'userOpCode, $msg'isPremiumUserOpCode, $msg'costPerAction) = $msg;
    throw_unless(27356, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    throw_unless(24142, ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_isCampaignActive());
    int $newUserOpCode = $msg'userOpCode;
    int $isPremiumUserOpCode = $msg'isPremiumUserOpCode;
    int $cpa = $msg'costPerAction;
    if ($isPremiumUserOpCode) {
        throw_unless(12734, (~ null?(__tact_dict_get_int_int($self'campaignDetails'premiumUsersCostPerAction, 257, $newUserOpCode, 257))));
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateMaxCpaValue($cpa);
        $self'campaignDetails'premiumUsersCostPerAction~__tact_dict_set_int_int(257, $newUserOpCode, $cpa, 257);
    } else {
        throw_unless(12734, (~ null?(__tact_dict_get_int_int($self'campaignDetails'regularUsersCostPerAction, 257, $newUserOpCode, 257))));
        ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_updateMaxCpaValue($cpa);
        $self'campaignDetails'regularUsersCostPerAction~__tact_dict_set_int_int(257, $newUserOpCode, $cpa, 257);
    }
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_AdvertiserUserAction((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int, int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId, $msg'userActionOpCode, $msg'isPremiumUser) = $msg;
    throw_unless(11661, ( __tact_slice_eq_bits($self'advertiser, __tact_context_get_sender()) ));
    throw_unless(14465, ($msg'userActionOpCode > 20000));
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_applyUserAction($msg'userActionOpCode, $msg'affiliateId, $msg'isPremiumUser);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_ParentToChildJettonNotificationMessageFailure((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'amount) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    $self'contractUSDTBalance = $self'contractUSDTBalance + $msg'amount;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_ParentToChildWithdrawUSDTToPayout((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'amount) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_transferJettonUSDT($self'payout, $msg'amount);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_internal_binary_ParentToChildPayAffiliateUSDTBounced((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId, $msg'amount) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_bouncedPayment($msg'affiliateId, $msg'amount);
    $self'contractUSDTBalance = $self'contractUSDTBalance + $msg'amount;
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

(((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice)), ()) $Campaign$_receive_binary_bounce_PayAffiliate((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self, (int, int) $msg) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    var ($msg'affiliateId, $msg'amount) = $msg;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_bouncedPayment($msg'affiliateId, $msg'amount);
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_internal_text_6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireStopped();
    $self'stopped = false;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_reply(__gen_cell_comment_514f593ead485926515219a03034c6b162f1c29390f83f2f1bd70b8b77731ec3());
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), ()) $Campaign$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) $self) impure inline {
    var ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet) = $self;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireOwner();
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_requireNotStopped();
    $self'stopped = true;
    ($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet)~$Campaign$_fun_reply(__gen_cell_comment_8f4b6a166554b4f282855d0333c627d5b58d281ea4ba11e4def91a1053193b2d());
    return (($self'owner, $self'stopped, $self'campaignId, $self'payout, $self'advertiser, ($self'campaignDetails'regularUsersCostPerAction, $self'campaignDetails'premiumUsersCostPerAction, $self'campaignDetails'isPublicCampaign, $self'campaignDetails'campaignValidForNumDays, $self'campaignDetails'paymentMethod, $self'campaignDetails'requiresAdvertiserApprovalForWithdrawl), $self'bot, $self'currAffiliateId, $self'affiliates, $self'state, $self'campaignStartTimestamp, $self'lastUserActionTimestamp, $self'numAdvertiserWithdrawls, $self'numAdvertiserSignOffs, $self'numAdvertiserReplenishCampaign, $self'numAdvertiserReplenishGasFees, $self'numUserActions, $self'totalAffiliateEarnings, $self'maxCpaValue, $self'affiliateFeePercentage, $self'advertiserFeePercentage, $self'topAffiliates, $self'contractUSDTBalance, $self'contractUsdtWallet), ());
}

;;
;; Get methods of a Contract Campaign
;;

_ %campaignData() method_id(84946) {
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_campaignData();
    return $CampaignData$_to_external(res);
}

_ %affiliateData(int $affiliateId) method_id(106530) {
    int $affiliateId = $affiliateId;
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_affiliateData($affiliateId);
    return $AffiliateData$_to_opt_external(res);
}

_ %affiliatesData() method_id(89929) {
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_affiliatesData();
    return res;
}

_ %affiliatesDataInRange(int $fromIdx, int $toIdx) method_id(80660) {
    int $fromIdx = $fromIdx;
    int $toIdx = $toIdx;
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_affiliatesDataInRange($fromIdx, $toIdx);
    return res;
}

_ %balance() method_id(104128) {
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_balance();
    return res;
}

_ %stopped() method_id(74107) {
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_stopped();
    return res;
}

_ %owner() method_id(83229) {
    var self = $Campaign$_contract_load();
    var res = self~$Campaign$_fun_owner();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Campaign
;;

((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice), int) $Campaign$_contract_router_internal((slice, int, int, slice, slice, (cell, cell, int, int, int, int), slice, int, cell, int, int, int, int, int, int, int, int, int, int, int, int, cell, int, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Parse op
        int op = 0;
        if (slice_bits(in_msg) >= 32) {
            op = in_msg.preload_uint(32);
        }
        
        ;; Bounced handler for PayAffiliate message
        if (op == 2310656706) {
            var msg = in_msg~$PayAffiliate$_load();
            self~$Campaign$_receive_binary_bounce_PayAffiliate(msg);
            return (self, true);
        }
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive ParentToChildDeployCampaign message
    if (op == 1292517596) {
        var msg = in_msg~$ParentToChildDeployCampaign$_load();
        self~$Campaign$_internal_binary_ParentToChildDeployCampaign(msg);
        return (self, true);
    }
    
    ;; Receive TokenExcesses message
    if (op == 0xd53276db) {
        var msg = in_msg~$TokenExcesses$_load();
        self~$Campaign$_internal_binary_TokenExcesses(msg);
        return (self, true);
    }
    
    ;; Receive JettonTransferNotification message
    if (op == 0x7362d09c) {
        var msg = in_msg~$JettonTransferNotification$_load();
        self~$Campaign$_internal_binary_JettonTransferNotification(msg);
        return (self, true);
    }
    
    ;; Receive AffiliateWithdrawEarnings message
    if (op == 2309430758) {
        var msg = in_msg~$AffiliateWithdrawEarnings$_load();
        self~$Campaign$_internal_binary_AffiliateWithdrawEarnings(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserSignOffWithdraw message
    if (op == 2469363792) {
        var msg = in_msg~$AdvertiserSignOffWithdraw$_load();
        self~$Campaign$_internal_binary_AdvertiserSignOffWithdraw(msg);
        return (self, true);
    }
    
    ;; Receive ParentToChildSeizeCampaign message
    if (op == 340595563) {
        var msg = in_msg~$ParentToChildSeizeCampaign$_load();
        self~$Campaign$_internal_binary_ParentToChildSeizeCampaign(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserSetCampaignDetails message
    if (op == 1253088072) {
        var msg = in_msg~$AdvertiserSetCampaignDetails$_load();
        self~$Campaign$_internal_binary_AdvertiserSetCampaignDetails(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserReplenish message
    if (op == 1319387318) {
        var msg = in_msg~$AdvertiserReplenish$_load();
        self~$Campaign$_internal_binary_AdvertiserReplenish(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserReplenishGasFeesForUSDTCampaign message
    if (op == 3170273034) {
        var msg = in_msg~$AdvertiserReplenishGasFeesForUSDTCampaign$_load();
        self~$Campaign$_internal_binary_AdvertiserReplenishGasFeesForUSDTCampaign(msg);
        return (self, true);
    }
    
    ;; Receive AffiliateCreateNewAffiliate message
    if (op == 820291840) {
        var msg = in_msg~$AffiliateCreateNewAffiliate$_load();
        self~$Campaign$_internal_binary_AffiliateCreateNewAffiliate(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserApproveAffiliate message
    if (op == 1560570076) {
        var msg = in_msg~$AdvertiserApproveAffiliate$_load();
        self~$Campaign$_internal_binary_AdvertiserApproveAffiliate(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserRemoveAffiliate message
    if (op == 2637094481) {
        var msg = in_msg~$AdvertiserRemoveAffiliate$_load();
        self~$Campaign$_internal_binary_AdvertiserRemoveAffiliate(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserWithdrawFunds message
    if (op == 3579069153) {
        var msg = in_msg~$AdvertiserWithdrawFunds$_load();
        self~$Campaign$_internal_binary_AdvertiserWithdrawFunds(msg);
        return (self, true);
    }
    
    ;; Receive BotUserAction message
    if (op == 1940543113) {
        var msg = in_msg~$BotUserAction$_load();
        self~$Campaign$_internal_binary_BotUserAction(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserAddNewUserOpCode message
    if (op == 237456654) {
        var msg = in_msg~$AdvertiserAddNewUserOpCode$_load();
        self~$Campaign$_internal_binary_AdvertiserAddNewUserOpCode(msg);
        return (self, true);
    }
    
    ;; Receive AdvertiserUserAction message
    if (op == 3231438857) {
        var msg = in_msg~$AdvertiserUserAction$_load();
        self~$Campaign$_internal_binary_AdvertiserUserAction(msg);
        return (self, true);
    }
    
    ;; Receive ParentToChildJettonNotificationMessageFailure message
    if (op == 1354800261) {
        var msg = in_msg~$ParentToChildJettonNotificationMessageFailure$_load();
        self~$Campaign$_internal_binary_ParentToChildJettonNotificationMessageFailure(msg);
        return (self, true);
    }
    
    ;; Receive ParentToChildWithdrawUSDTToPayout message
    if (op == 2232130989) {
        var msg = in_msg~$ParentToChildWithdrawUSDTToPayout$_load();
        self~$Campaign$_internal_binary_ParentToChildWithdrawUSDTToPayout(msg);
        return (self, true);
    }
    
    ;; Receive ParentToChildPayAffiliateUSDTBounced message
    if (op == 2591643766) {
        var msg = in_msg~$ParentToChildPayAffiliateUSDTBounced$_load();
        self~$Campaign$_internal_binary_ParentToChildPayAffiliateUSDTBounced(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Resume" message
        if (text_op == 0x6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df) {
            self~$Campaign$_internal_text_6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df();
            return (self, true);
        }
        
        ;; Receive "Stop" message
        if (text_op == 0xbcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501) {
            self~$Campaign$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Campaign$_contract_load();
    
    ;; Handle operation
    int handled = self~$Campaign$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Campaign$_contract_store(self);
}
