version: '3.8'

services:
  mini-app:
    build:
      context: .
      dockerfile: ./modules/mini-app/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        NETWORK_ENV: ${NETWORK_ENV}
    ports:
      - "80:80"
    volumes:
      - ./modules/mini-app/nginx.conf:/etc/nginx/conf.d/nginx.conf.template
      - ./modules/common:/app/src/common
    networks:
      - app-network
    env_file:
      - ./modules/mini-app/.env.${NODE_ENV}
      - ./modules/common/.env.${NETWORK_ENV}

  web-server:
    build:
      context: .
      dockerfile: ./modules/web-server/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - app-network
    env_file:
      - ./modules/web-server/.env.${NODE_ENV}
      - ./modules/common/.env.${NETWORK_ENV}

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - ./modules/web-server/.env.${NODE_ENV}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
